{"ast":null,"code":"import _assertThisInitialized from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gulshair/Nodejs/app-ui-react/src/Components/UpdateUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar UpdateUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateUser, _Component);\n\n  function UpdateUser(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateUser).call(this, props));\n\n    _this.handleUserIdChange = function (e) {\n      _this.setState({\n        userId: e.target.value\n      });\n    };\n\n    _this.handleSearch = function () {\n      if (_this.state.userId === '') {\n        _this.setState({\n          userIdErr: 'User Id is required.'\n        });\n      }\n\n      if (_this.state.userId !== '') {\n        var userId = _this.state.userId; //Checking whether Searched User exist in DB or not\n\n        axios({\n          method: 'get',\n          url: 'http://localhost:4000/getUser/' + userId\n        }).then(function (response) {\n          if (response.status === 200) {\n            if (response.data !== null) {\n              _this.setState({\n                update: true,\n                userData: response,\n                previousName: response.data.username,\n                previousAge: response.data.age,\n                userIdErr: ''\n              });\n            }\n\n            if (response.data === null) {\n              _this.setState({\n                update: false,\n                userIdErr: 'User with this Id does not exist.'\n              });\n            }\n          }\n        });\n      }\n    };\n\n    _this.nameHandler = function () {\n      _this.setState({\n        previousName: ''\n      });\n    };\n\n    _this.ageHandler = function () {\n      _this.setState({\n        previousAge: ''\n      });\n    };\n\n    _this.state = {\n      userId: '',\n      userIdErr: '',\n      update: false,\n      userData: '',\n      previousName: '',\n      previousAge: ''\n    };\n    return _this;\n  }\n\n  _createClass(UpdateUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Update User';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Update User\")), React.createElement(\"div\", {\n        className: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"User ID:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter User ID to update User\",\n        value: this.state.userId,\n        onChange: this.handleUserIdChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Search & Update\"))), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.userIdErr), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(SearchedUser, {\n        state: this.state,\n        nameHandler: this.nameHandler,\n        ageHandler: this.ageHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UpdateUser;\n}(Component);\n\nvar SearchedUser =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(SearchedUser, _Component2);\n\n  function SearchedUser(props) {\n    var _this2;\n\n    _classCallCheck(this, SearchedUser);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SearchedUser).call(this, props));\n    _this2.state = {\n      updatedName: '',\n      updatedAge: '',\n      updatedNameErr: '',\n      updatedAgeErr: '',\n      successMsg: false\n    };\n    _this2.handleNameChange = _this2.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleAgeChange = _this2.handleAgeChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleSuccessMsg = _this2.handleSuccessMsg.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleUpdate = _this2.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleUpdatedInputs = _this2.handleUpdatedInputs.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(SearchedUser, [{\n    key: \"handleNameChange\",\n    value: function handleNameChange(e) {\n      this.setState({\n        updatedName: e.target.value\n      });\n      this.props.nameHandler();\n    }\n  }, {\n    key: \"handleAgeChange\",\n    value: function handleAgeChange(e) {\n      this.setState({\n        updatedAge: e.target.value\n      });\n      this.props.ageHandler();\n    }\n  }, {\n    key: \"handleSuccessMsg\",\n    value: function handleSuccessMsg() {\n      this.setState({\n        successMsg: false\n      });\n    }\n  }, {\n    key: \"handleUpdatedInputs\",\n    value: function handleUpdatedInputs() {\n      //This is because updatedName & updateAge are empty if onChange of input fields are nor called\n      if (this.props.state.previousName !== '') {\n        this.setState({\n          updatedName: this.props.state.previousName\n        });\n        this.props.nameHandler();\n      }\n\n      if (this.props.state.previousAge !== '') {\n        this.setState({\n          updatedAge: this.props.state.previousAge\n        });\n        this.props.ageHandler();\n      }\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate() {\n      var _this3 = this;\n\n      if (this.state.updatedName === '') {\n        this.setState({\n          updatedNameErr: 'Name is Required.'\n        });\n      }\n\n      if (this.state.updatedAge === '') {\n        this.setState({\n          updatedAgeErr: 'Age is Required.'\n        });\n      }\n\n      if (this.state.updatedName !== '' && this.state.updatedAge !== '') {\n        var userData = {\n          username: this.state.updatedName,\n          age: this.state.updatedAge\n        };\n        var userId = this.props.state.userId;\n        axios({\n          method: 'put',\n          url: 'http://localhost:4000/updateUser/' + userId,\n          data: userData\n        }).then(function (response) {\n          if (response.status === 200) {\n            _this3.setState({\n              updatedName: '',\n              updatedAge: '',\n              updatedNameErr: '',\n              updatedAgeErr: '',\n              successMsg: true\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.state.update === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(SuccessMsg, {\n          successMsg: this.state.successMsg,\n          handler: this.handleSuccessMsg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Name:\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.updatedName === '' ? this.props.state.previousName : this.state.updatedName,\n          placeholder: \"Enter Name\",\n          onChange: this.handleNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, this.state.updatedNameErr), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Age:\"), React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: this.state.updatedAge === '' ? this.props.state.previousAge : this.state.updatedAge,\n          placeholder: \"Enter age\",\n          onChange: this.handleAgeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, this.state.updatedAgeErr), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.handleUpdate,\n          onMouseMove: this.handleUpdatedInputs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"Update\"))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return SearchedUser;\n}(Component);\n\nvar SuccessMsg =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(SuccessMsg, _Component3);\n\n  function SuccessMsg() {\n    _classCallCheck(this, SuccessMsg);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SuccessMsg).apply(this, arguments));\n  }\n\n  _createClass(SuccessMsg, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.successMsg) {\n        return React.createElement(\"div\", {\n          className: \"alert alert-success alert-dismissible\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"close\",\n          onClick: this.props.handler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Success!\"), \" User has been Updated Successfully.\");\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return SuccessMsg;\n}(Component);\n\nexport default UpdateUser;","map":{"version":3,"sources":["/home/gulshair/Nodejs/app-ui-react/src/Components/UpdateUser.js"],"names":["React","Component","axios","UpdateUser","props","handleUserIdChange","e","setState","userId","target","value","handleSearch","state","userIdErr","method","url","then","response","status","data","update","userData","previousName","username","previousAge","age","nameHandler","ageHandler","document","title","SearchedUser","updatedName","updatedAge","updatedNameErr","updatedAgeErr","successMsg","handleNameChange","bind","handleAgeChange","handleSuccessMsg","handleUpdate","handleUpdatedInputs","SuccessMsg","handler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass UpdateUser extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            userId:'',\n            userIdErr:'',\n            update:false,\n            userData:'',\n            previousName:'',\n            previousAge:''\n        }\n    }\n\n    handleUserIdChange = e => {\n        this.setState({userId:e.target.value});\n    }\n\n    handleSearch = () => {\n        if(this.state.userId===''){\n            this.setState({userIdErr:'User Id is required.'});\n        }\n        if(this.state.userId!==''){\n\n            const userId = this.state.userId;\n            //Checking whether Searched User exist in DB or not\n            axios({method: 'get',url: 'http://localhost:4000/getUser/'+userId,}).then(response => {\n                \n                if(response.status===200){\n                    if(response.data!==null){\n                        this.setState({update:true,userData:response,previousName:response.data.username,previousAge:response.data.age,userIdErr:''});\n                    }\n                    if(response.data===null){\n                        this.setState({update:false,userIdErr:'User with this Id does not exist.'});\n                    }\n                }\n            });\n        }\n        \n\n    }\n\n    nameHandler = () => {\n        this.setState({previousName:''});\n    }\n\n    ageHandler = () => {\n        this.setState({previousAge:''});\n    }\n\n\n    componentDidMount() {\n        document.title = 'Update User';\n    }\n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1 className=\"text-center\">Update User</h1>\n                </div>\n                <div className=\"form-inline\">\n                    <div className=\"form-group\">\n                        <label>User ID:</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter User ID to update User\" value={this.state.userId} onChange={this.handleUserIdChange}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\" onClick={this.handleSearch}>Search & Update</button>\n                    </div>\n                </div>\n                <span className=\"text-danger\">{this.state.userIdErr}</span>\n                <br />\n\n                <SearchedUser state={this.state} nameHandler={this.nameHandler} ageHandler={this.ageHandler} />\n\n            </div>\n        );\n    }\n}\n\nclass SearchedUser extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            updatedName:'',\n            updatedAge:'',\n            updatedNameErr:'',\n            updatedAgeErr:'',\n            successMsg:false\n        };\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleAgeChange = this.handleAgeChange.bind(this);\n        this.handleSuccessMsg = this.handleSuccessMsg.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        this.handleUpdatedInputs = this.handleUpdatedInputs.bind(this);\n    }\n\n    handleNameChange(e){\n        this.setState({updatedName:e.target.value});\n        this.props.nameHandler();\n    }\n\n    handleAgeChange(e){\n        this.setState({updatedAge:e.target.value});\n        this.props.ageHandler();\n    }\n\n    handleSuccessMsg(){\n        this.setState({successMsg:false});\n    }\n\n    handleUpdatedInputs(){\n        //This is because updatedName & updateAge are empty if onChange of input fields are nor called\n        if(this.props.state.previousName!==''){\n            this.setState({updatedName:this.props.state.previousName});\n            this.props.nameHandler();\n        }\n        if(this.props.state.previousAge!==''){\n            this.setState({updatedAge:this.props.state.previousAge});\n            this.props.ageHandler();\n        }\n    }\n\n    handleUpdate(){\n\n        if(this.state.updatedName===''){\n            this.setState({updatedNameErr:'Name is Required.'});\n        }\n        if(this.state.updatedAge===''){\n            this.setState({updatedAgeErr:'Age is Required.'});\n        }\n        if(this.state.updatedName!=='' && this.state.updatedAge!==''){\n\n            const userData = {\n                username:this.state.updatedName,\n                age:this.state.updatedAge\n            }\n            const userId = this.props.state.userId;\n\n            axios({ method: 'put',url: 'http://localhost:4000/updateUser/'+userId,data: userData,}).then(response => {\n                \n                if(response.status===200){\n                    this.setState({updatedName:'',updatedAge:'',updatedNameErr:'',updatedAgeErr:'',successMsg:true});\n                }\n            });\n        }\n    }\n\n    render(){\n\n        if(this.props.state.update===true){\n\n            return ( \n                <div>\n                    <SuccessMsg successMsg={this.state.successMsg} handler={this.handleSuccessMsg}/>\n                    <div className=\"\">\n\n                        <div className=\"form-group\">\n                            <label>Name:</label>\n                            <input type=\"text\" className=\"form-control\" value={this.state.updatedName==='' ? this.props.state.previousName:this.state.updatedName} placeholder=\"Enter Name\" onChange={this.handleNameChange}></input>\n                        </div>\n                        <span className=\"text-danger\">{this.state.updatedNameErr}</span>\n\n                        <div className=\"form-group\">\n                            <label >Age:</label>\n                            <input type=\"number\" className=\"form-control\" value={this.state.updatedAge==='' ? this.props.state.previousAge:this.state.updatedAge} placeholder=\"Enter age\" onChange={this.handleAgeChange}></input>\n                        </div>\n                        <span className=\"text-danger\">{this.state.updatedAgeErr}</span>\n\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-primary\" onClick={this.handleUpdate} onMouseMove={this.handleUpdatedInputs}>Update</button>\n                        </div>\n\n                    </div>\n                </div>\n            );  \n        }\n        else {\n            return null;\n        }\n        \n    }\n}\n\nclass SuccessMsg extends Component {\n    render(){\n        if(this.props.successMsg){\n        \n            return (\n                <div className=\"alert alert-success alert-dismissible\">\n                    <p className=\"close\" onClick={this.props.handler}>&times;</p>\n                    <strong>Success!</strong> User has been Updated Successfully.\n                </div>\n            );\n        }\n        else{\n            return null;\n        }\n    }\n}\n\n\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}