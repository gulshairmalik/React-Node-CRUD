{"ast":null,"code":"import _classCallCheck from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gulshair/Nodejs/app-ui-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gulshair/Nodejs/app-ui-react/src/Components/UpdateUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar UpdateUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateUser, _Component);\n\n  function UpdateUser(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateUser).call(this, props));\n    _this.state = {\n      userId: '',\n      userIdErr: '',\n      update: false,\n      userData: ''\n    };\n    _this.handleUserIdChange = _this.handleUserIdChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearch = _this.handleSearch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateUser, [{\n    key: \"handleUserIdChange\",\n    value: function handleUserIdChange(e) {\n      this.setState({\n        userId: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch() {\n      var _this2 = this;\n\n      if (this.state.userId === '') {\n        this.setState({\n          userIdErr: 'User Id is required.'\n        });\n      }\n\n      if (this.state.userId !== '') {\n        var userId = this.state.userId; //Checking whether Searched User exist in DB or not\n\n        axios({\n          method: 'get',\n          url: 'http://localhost:4000/getUser/' + userId\n        }).then(function (response) {\n          if (response.status === 200) {\n            _this2.setState({\n              update: true,\n              userData: response,\n              userIdErr: ''\n            });\n          }\n        });\n\n        if (!this.state.update) {\n          this.setState({\n            userIdErr: 'User with this Id does not  '\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Update User';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Update User\")), React.createElement(\"div\", {\n        className: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"User ID:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter User ID to update User\",\n        value: this.state.userId,\n        onChange: this.handleUserIdChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Search & Update\"))), React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.userIdErr), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UpdateUser;\n}(Component);\n\nexport default UpdateUser;","map":{"version":3,"sources":["/home/gulshair/Nodejs/app-ui-react/src/Components/UpdateUser.js"],"names":["React","Component","axios","UpdateUser","props","state","userId","userIdErr","update","userData","handleUserIdChange","bind","handleSearch","e","setState","target","value","method","url","then","response","status","document","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass UpdateUser extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            userId:'',\n            userIdErr:'',\n            update:false,\n            userData:''\n        }\n\n        this.handleUserIdChange = this.handleUserIdChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    handleUserIdChange(e){\n        this.setState({userId:e.target.value});\n    }\n\n    handleSearch(){\n        if(this.state.userId===''){\n            this.setState({userIdErr:'User Id is required.'});\n        }\n        if(this.state.userId!==''){\n            const userId = this.state.userId;\n            //Checking whether Searched User exist in DB or not\n            axios({method: 'get',url: 'http://localhost:4000/getUser/'+userId,}).then(response => {\n                if(response.status===200){\n                    this.setState({update:true,userData:response,userIdErr:''});\n                }\n            });\n            if(!this.state.update){\n                this.setState({userIdErr:'User with this Id does not  '});\n            }\n        }\n        \n\n    }\n\n    componentDidMount() {\n        document.title = 'Update User';\n    }\n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1 className=\"text-center\">Update User</h1>\n                </div>\n                <div className=\"form-inline\">\n                    <div className=\"form-group\">\n                        <label>User ID:</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter User ID to update User\" value={this.state.userId} onChange={this.handleUserIdChange}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\" onClick={this.handleSearch}>Search & Update</button>\n                    </div>\n                </div>\n                <span className=\"text-danger\">{this.state.userIdErr}</span>\n                <br />\n\n            </div>\n        );\n    }\n}\n\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}